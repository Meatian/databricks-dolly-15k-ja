{"index":"8258","instruction":"マイクロサービスのメリットは何ですか？","input":"","output":"マイクロサービスは、モノリシックなアーキテクチャを、単一の目的を果たすスタンドアロンの軽量なサービスに分解する。  単一目的のサービスに特化したチームは、他のサービスから独立してリリースをコントロールできるため、開発者の生産性は向上します。  また、サービスが記述される言語も制御できます。  これは、あるサービスがC#、Java、JavascriptではなくPythonで書かれることで恩恵を受けるような場合に有効です。  マイクロサービスは、サービスが直接結合したり参照されたりしない、イベント駆動型のアーキテクチャを提唱しています。  各マイクロサービスは、他のサービスによって消費\/購読されるイベントを公開することができます。  Microservicesを設計する際、コンテナは不変であり、牛のように扱われなければならないというパラダイムを考慮すると、コンテナ化とMicroservicesは相性が良い。  同じMicroserviceの新旧バージョンをA\/Bパターンで並行してリリースすることができ、更新の保証に役立ちます。  コンテナはMicroservicesを迅速にホストし、実行イメージのビルドにすべての依存関係がカプセル化されていることを保証する信頼性を持って環境間でテストすることができます。","category":"open_qa"}
