{"index":"4852","instruction":"データベースがACIDに準拠しているというのはどういう意味ですか？","input":"コンピュータサイエンスにおいて、ACID（atomicity, consistency, isolation, durability）とは、エラー、停電、その他の災難にもかかわらずデータの有効性を保証することを目的としたデータベーストランザクションの特性の一群である。データベースの文脈では、ACIDの特性を満たす一連のデータベース操作（データに対する1つの論理操作として認識できる）をトランザクションと呼ぶ。例えば、ある銀行口座から別の銀行口座への資金移動は、ある口座から引き落とし、別の口座から貸し出すといった複数の変更を伴う場合でも、1つのトランザクションである。\n\n1983年、Andreas ReuterとTheo Härderは、トランザクションの概念を特徴付ける際に、分離ではなく、原子性、一貫性、耐久性と名付けたJim Grayによる以前の研究を基に、ACIDという頭文字を作り出した。この4つの特性は、トランザクションパラダイムの主要な保証であり、データベースシステムの開発の多くの側面に影響を与えた。\n\nGrayとReuterによると、IBM Information Management Systemは1973年の時点でACIDトランザクションをサポートしていた（ただし、頭字語は後から作られたもの）。\n\nアトミシティ\n主な記事原子性(データベースシステム)\nトランザクションは多くの場合、複数のステートメントで構成されています。アトミシティは、各トランザクションが完全に成功するか、完全に失敗するかのどちらかである単一の「ユニット」として扱われることを保証する。トランザクションを構成するステートメントのいずれかが完了しない場合、トランザクション全体が失敗し、データベースは変更されないままになる。アトミックシステムは、停電、エラー、クラッシュなど、あらゆる状況においてアトミック性を保証しなければならない[5]。アトミック性の保証により、データベースへの更新が部分的にしか行われず、シリーズ全体を完全に拒否するよりも大きな問題を引き起こすことがある。結果として、トランザクションは他のデータベースクライアントから進行中であることを観察することはできない。ある時点ではまだ起こっておらず、次の時点ではすでに全体が起こっている（トランザクションが途中でキャンセルされた場合は何も起こっていない）のである。\n\nコンシステンシー\n主な記事一貫性（データベースシステム）\n一貫性とは、トランザクションがデータベースをある一貫性のある状態から別の状態にすることだけを保証し、データベースの不変性を保持することです。データベースに書き込まれるデータは、制約、カスケード、トリガー、およびそれらの組み合わせを含むすべての定義されたルールに従って有効である必要があります。これにより、不正なトランザクションによるデータベースの破損を防ぐことができます。参照整合性は、主キーと外部キーの関係を保証する[6]。\n\nアイソレーション\n主な記事アイソレーション(データベースシステム)\nトランザクションはしばしば同時に実行されます（例えば、複数のトランザクションが同時にテーブルを読み書きするなど）。分離は、トランザクションの同時実行が、トランザクションを順次実行した場合と同じ状態でデータベースを残すことを保証します。分離は並行性制御の主な目的です。使用する分離レベルによっては、不完全なトランザクションの影響が他のトランザクションから見えなくなることもあります[7]。\n\n耐久性\n主な記事耐久性(データベースシステム)\n耐久性とは、一度コミットされたトランザクションは、システム障害（停電やクラッシュなど）が発生してもコミットされたままであることを保証するものです。これは通常、完了したトランザクション（またはその効果）が不揮発性メモリに記録されることを意味します。","output":"ACIDとは、Atomicity、Consistency、Isolation、Durabilityの頭文字をとったものである。\n原子性とは、動作が完全に行われるか、まったく行われないかを意味し、部分的な書き込みや動作の一部だけが完了した状況は発生しない。データベースでは、1つのトランザクションでデータが書き込まれた場合、そのトランザクションは完全に完了するか、完全に失敗するかのどちらかで、部分的または破損した状態でデータが残されることはありません、ということを意味します。\n一貫性とは、トランザクションがある有効な状態から別の有効な状態へと状態を移行させ、無効な状態に入る方法がないことを意味します。\n分離とは、同じデータベースに対する複数のリーダ\/ライタが互いに干渉せず、別のアクションが発生した場合の影響を心配することなく処理を進めることができることを意味します。\n耐久性とは、故障やシャットダウンがあっても状態が保持されること、例えば状態が永久保存されることを意味します。","category":"summarization"}
